<%- include partials/header.ejs %>
 
<div class="jumbotron">
  <h1 class="display-4">Prime Mobiles</h1>
  <p class="lead">Select your prefered collection</p>
  <hr class="my-4">
  <div class="phone-container">
    <div class="phone-item">
      <img src="images/iphone 13.jpg" alt="Phone 1">
      <p class="phone-description">Redmi Note 12 Pro - 6GB RAM & 128GB Internal</p>
      <p class="phone-price">Price: 0.04 ETH</p>
      <button class="btn btn-success btn-lg payment-btn" onclick="confirmpayment('0.04')" disabled> Pay 0.04 ETH</button>
    </div>
 
    <div class="phone-item">
      <img src="images/new 1.jpg" alt="Phone 2">
      <p class="phone-description">Iphone 14 - 6GB RAM & 256 GB Internal</p>
      <p class="phone-price">Price: 0.05 ETH</p>
      <button class="btn btn-success btn-lg payment-btn" onclick="confirmpayment('0.05')" disabled> Pay 0.05 ETH</button>
    </div>
   
    <div class="phone-item">
      <img src="images/new 2.jpg" alt="Phone 3">
      <p class="phone-description">Redmi Note 12 Pro - 6GB RAM & 128GB Internal</p>
      <p class="phone-price">Price: 0.06 ETH</p>
      <button class="btn btn-success btn-lg payment-btn" onclick="confirmpayment('0.06')" disabled> Pay 0.06 ETH</button>
    </div>
   
    <div class="phone-item">
      <img src="images/new 3.jpg" alt="Phone 4">
      <p class="phone-description">Redmi Note 12 Pro - 6GB RAM & 128GB Internal</p>
      <p class="phone-price">Price: 0.05 ETH</p>
      <button class="btn btn-success btn-lg payment-btn" onclick="confirmpayment('0.05')" disabled> Pay 0.05 ETH</button>
    </div>
    <div class="phone-item">
      <img src="images/new 1.jpg" alt="Phone 5">
      <p class="phone-description">Redmi Note 12 Pro - 6GB RAM & 128GB Internal</p>
      <p class="phone-price">Price: 0.02 ETH</p>
      <button class="btn btn-success btn-lg payment-btn" onclick="confirmpayment('0.02')" disabled> Pay 0.02 ETH</button>
    </div>
    <div class="phone-item">
      <img src="images/new 4.jpg" alt="Phone 6">
      <p class="phone-description">Redmi Note 12 Pro - 6GB RAM & 128GB Internal</p>
      <p class="phone-price">Price: 0.03 ETH</p>
      <button class="btn btn-success btn-lg payment-btn" onclick="confirmpayment('0.03')" disabled> Pay 0.03 ETH</button>
    </div>
  </div>
 
  <p class="lead">
    <a class="btn btn-success btn-lg" onclick="connectMetamask()" role="button">Connect to Meta Mask</a>
  </p>
</div>
 
<style>
  .phone-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between; /* or use space-around for some space between items */
  }
 
  .phone-item {
    width: 30%; /* Adjust the width as per your design */
    margin-bottom: 20px; /* Add some bottom margin for spacing */
  }
 
  .phone-item img {
    max-width: 70%; /* Ensure the image doesn't exceed the width of the container */
    height: auto; /* Maintain the aspect ratio of the image */
  }
</style>
 
<script>
  let account;
    const confirmpayment = async (amount) => {
        if(window.ethereum !== "underfined"){
            const accounts = await ethereum.request({method: "eth_requestAccounts"});
            account = accounts[0];
            // document.getElementById("userArea").innerHTML = `User Account: ${account}`;
            console.log("Confirm your payment"+amount);
            depositContract(amount);
        }
    }
   
    const connectMetamask = async () => {
        if(window.ethereum !== "underfined"){
            const accounts = await ethereum.request({method: "eth_requestAccounts"});
            account = accounts[0];
            // document.getElementById("userArea").innerHTML = `User Account: ${account}`;
            console.log("connected to user metamask");
            var paymentButtons = document.getElementsByClassName('payment-btn');
            // Enable all buttons with the class "payment-btn"
            for (var i = 0; i < paymentButtons.length; i++) {
                paymentButtons[i].disabled = false;
            }
            connectContract();
 
        }
    }
 
    const connectContract = async () => {
            const ABI = [
	{
		"inputs": [],
		"name": "deposit",
		"outputs": [],
		"stateMutability": "payable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address payable",
				"name": "_to",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "_amount",
				"type": "uint256"
			}
		],
		"name": "withdraw",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getAddress",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getBalance",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	}
];
            const Address = "0xf36aBFcf16C78295E0d700CBbA204407186bAb8E"; // Taking Address from Remix
            window.web3 = await new Web3(window.ethereum);
            window.contract = await new window.web3.eth.Contract(ABI, Address);
            // document.getElementById("contractArea").innerHTML = "Connected to Contract"; // calling the elementID above
            console.log("Connected to contract");
        }
 
        const getContractAccount = async () => {
            const data = await window.contract.methods.getAddress().call();
            document.getElementById("contractAccount").innerHTML = `Contract Account: ${data}`;
            console.log("This Contract Account ");
        }
       
        const depositContract = async (amount) => {
            // const amount = document.getElementById("depositInput").value;
            amount = amount * 100000000000000000;
            await window.contract.methods.deposit().send({from: account, value: amount});
            console.log("Deposited amount to contract"+amount);
        }
 
</script>
 
 
 
<%- include partials/footer.ejs %>